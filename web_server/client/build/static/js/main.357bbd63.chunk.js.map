{"version":3,"sources":["Auth/Auth.js","NewsCard/NewsCard.js","Graph/Graph.js","App/App.js","LoginPage/LoginForm.js","LoginPage/LoginPage.js","SignUp/SignUpForm.js","SignUp/SignUpPage.js","Base/Base.js","serviceWorker.js","index.js"],"names":["Auth","token","email","localStorage","setItem","getItem","removeItem","NewsCard","url","event","preventDefault","window","open","_this","this","react_default","a","createElement","Card","className","CardActionArea","CardMedia","component","height","image","props","news","urlToImage","CardContent","Typography","gutterBottom","variant","title","source","Chip","label","color","reason","time","description","CardActions","Button","size","onClick","redirectToUrl","FacebookShareButton","quote","FacebookIcon","round","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","React","Component","Graph","node","handleNodeClick","distRatio","Math","hypot","x","y","z","fg","cameraPosition","react_force_graph_module","ref","el","width","innerWidth","backgroundColor","linkColor","link","graphData","linkWidth","onNodeClick","nodeThreeObject","_ref","imgTexture","THREE","load","material","map","sprite","scale","set","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","data","focused_news","loaded","loadNews","_this2","news_url","location","hostname","request","Request","method","headers","Authorization","getToken","fetch","then","res","json","parsed","setState","nodes","id","digest","links","graph","from","target","to","_this3","generateGraphData","Grid","container","item","md","src_Graph_Graph","src_NewsCard_NewsCard","LoginForm","onSubmit","onChange","error","Paper","FormControl","margin","required","fullWidth","InputLabel","htmlFor","Input","name","autoComplete","autoFocus","type","LoginPage","user","password","console","log","Accept","Content-Type","body","JSON","stringify","response","status","authenticateUser","replace","field","value","src_LoginPage_LoginForm","e","processForm","changeUser","SignUpForm","SignUpPage","confirm_password","src_SignUp_SignUpForm","Base","withRouter","history","AppBar","position","Toolbar","IconButton","aria-label","xmlns","viewBox","d","fill","isUserAuthenticated","getEmail","href","push","logout","Link","react_router","exact","path","render","src_App_App","src_LoginPage_LoginPage","Boolean","match","ReactDOM","react_router_dom","src_Base_Base","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.357bbd63.chunk.js","sourcesContent":["class Auth {\n\t/**\n\t * Authenticate a user. Save a token string in Local Storage\n\t *\n\t * @param {string} token\n\t * @param {string} email\n\t */\n\tstatic authenticateUser(token, email) {\n\t\tlocalStorage.setItem('token', token);\n\t\tlocalStorage.setItem('email', email);\n\t}\n\n\t/**\n\t * Check if a user is authenticated - check if a token is saved in Local Storage\n\t *\n\t * @returns {boolean}\n\t */\n\tstatic isUserAuthenticated() {\n\t\treturn localStorage.getItem('token') !== null;\n\t}\n\n\t/**\n\t * Deauthenticate a user. Remove token and email from Local Storage.\n\t *\n\t */\n\tstatic deauthenticateUser() {\n\t\tlocalStorage.removeItem('token');\n\t\tlocalStorage.removeItem('email');\n\t}\n\n\t/**\n\t * Get a token value.\n\t *\n\t * @returns {string}\n\t */\n\tstatic getToken() {\n\t\treturn localStorage.getItem('token');\n\t}\n\n\t/**\n\t * Get email.\n\t *\n\t * @returns {string}\n\t */\n\tstatic getEmail() {\n\t\treturn localStorage.getItem('email');\n\t}\n}\n\nexport default Auth;\n","//import './NewsCard.css';\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport { FacebookShareButton, TwitterShareButton, LinkedinShareButton, FacebookIcon, TwitterIcon, LinkedinIcon } from 'react-share';\n\nclass NewsCard extends React.Component {\n    /* by click news url, redirect to source */\n    redirectToUrl(url, event) {\n        event.preventDefault();\n        window.open(url, '_blank');\n    }\n\n    render() {\n        return (\n            <Card className=\"card\">\n               <CardActionArea>\n                 <CardMedia\n                   component=\"img\"\n                   height=\"320\"\n                   image={this.props.news.urlToImage}\n                 />\n                 <CardContent>\n                   <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                     {this.props.news.title}\n                   </Typography>\n                   {this.props.news.source != null && <Chip label={this.props.news.source} color=\"primary\" />}\n                   &nbsp; &nbsp;\n                   {this.props.news.reason != null && <Chip label={this.props.news.reason} color=\"secondary\" />}\n                   &nbsp; &nbsp;\n                   {this.props.news.time != null && <Chip label={this.props.news.time} variant=\"outlined\" color=\"primary\" />}\n                   <br/>\n                   <br/>\n                   <Typography component=\"p\">\n                     {this.props.news.description}\n                   </Typography>\n                 </CardContent>\n               </CardActionArea>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\" onClick={(event)=>this.redirectToUrl(this.props.news.url, event)}>\n                            Learn More\n                        </Button>\n                        <FacebookShareButton url={this.props.news.url} quote={this.props.news.title}>\n                        <FacebookIcon size={24} round />\n                        </FacebookShareButton>\n                        <TwitterShareButton\n                        url={this.props.news.url}\n                        quote={this.props.news.title}>\n                        <TwitterIcon size={24} />\n                        </TwitterShareButton>\n                        <LinkedinShareButton\n                        url={this.props.news.url}\n                        quote={this.props.news.title}>\n                    <LinkedinIcon size={24} />\n                    </LinkedinShareButton>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nexport default NewsCard;\n","import React from 'react';\nimport { ForceGraph3D } from 'react-force-graph';\nimport * as THREE from 'three';\n\nclass Graph extends React.Component {\n\n\tonClick(node) {\n\t\tthis.props.handleNodeClick(node);\n\n\t\t// Aim at node from outside it.\n\t\tconst distance = 60;\n\t\tconst distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\n\t\tthis.fg.cameraPosition({ x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio },\n\t\t\tnode, // look at {x, y, z})\n\t\t\t3000);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n            <ForceGraph3D\n                ref = { el => { this.fg = el; } }\n                width={ window.innerWidth * 0.65 }\n                backgroundColor='white'\n                linkColor={ link => '#0a6aee' }\n                graphData={ this.props.graphData }\n                linkWidth={ link => 0.5 }\n                onNodeClick={node => this.onClick(node)}\n                nodeThreeObject={({ news }) => {\n                const imgTexture = new THREE.TextureLoader().load(news.urlToImage);\n                const material = new THREE.SpriteMaterial({ map: imgTexture });\n                const sprite = new THREE.Sprite(material);\n                sprite.scale.set(21, 14, 1);\n                return sprite;\n          }}\n        />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Graph;\n","import './App.css';\n\nimport Auth from '../Auth/Auth';\nimport NewsCard from '../NewsCard/NewsCard';\nimport Graph from '../Graph/Graph';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { data: {}, focused_news: {}, loaded: false };\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n\tloadNews() {\n\t\tconst news_url = 'http://' + window.location.hostname + '/news';\n\t\tconst request = new Request(news_url, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'bearer ' + Auth.getToken(),\n\t\t\t}\n\t\t});\n\n\t\tfetch(request)\n\t\t\t.then(res => res.json())\n\t\t\t.then(parsed => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: parsed,\n\t\t\t\t\tfocused_news: parsed.focused_news,\n\t\t\t\t\tloaded: true\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgenerateGraphData(graphData) {\n\t\tconst nodes = graphData.news.map(news => ({ id: news.digest, news: news }));\n\n\t\tconst gData = {\n\t\t\tnodes: nodes,\n\t\t\tlinks: graphData.graph.links\n\t\t\t\t.map(link => ({\n\t\t\t\t\tsource: link.from,\n\t\t\t\t\ttarget: link.to\n\t\t\t\t}))\n\t\t};\n\n\t\treturn gData;\n\t}\n\n\thandleNodeClick(node) {\n\t\tthis.setState({\n\t\t\tfocused_news: node.news\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.loaded === false) {\n\t\t\treturn (<div></div>);\n\t\t}\n\n\t\tconst graphData = this.generateGraphData(this.state.data);\n\t\treturn (\n\t\t\t<div>\n        <Grid container>\n          <Grid item md={8}>\n            <Graph graphData={graphData} handleNodeClick={(node) => this.handleNodeClick(node)}/>\n          </Grid>\n          <Grid item md={4}>\n            <NewsCard news={this.state.focused_news} />\n          </Grid>\n        </Grid>\n      </div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import './LoginForm.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst LoginForm = ({\n\tonSubmit,\n\tonChange,\n\terror,\n}) => (\n\t<div className=\"login-panel\">\n\t\t <Paper className=\"paper\">\n\t\t\t <Typography component=\"h1\" variant=\"h4\">\n\t\t\t\t Sign in\n\t\t\t </Typography>\n\t\t\t <form onSubmit={onSubmit}>\n\t\t\t   {error && <p className=\"error-message\">{error}</p>}\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n\t\t\t\t\t <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"password\">Password</InputLabel>\n\t\t\t\t\t <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <br/>\n\t\t\t\t <br/>\n\t\t\t\t <Button\n\t\t\t\t\t type=\"submit\"\n\t\t\t\t\t fullWidth\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"primary\">\n\t\t\t\t\t Sign in\n\t\t\t\t </Button>\n\t\t\t </form>\n\t\t </Paper>\n\t </div>\n);\n\nLoginForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terror: PropTypes.func.isRequired\n}\n\nexport default LoginForm;\n","import Auth from '../Auth/Auth';\nimport LoginForm from './LoginForm';\nimport React from 'react';\n\nclass LoginPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\terror: '',\n\t\t\tuser: {\n\t\t\t\temail: '',\n\t\t\t\tpassword: ''\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessForm(event) {\n\t\tevent.preventDefault();\n\n\t\tconst email = this.state.user.email;\n\t\tconst password = this.state.user.password;\n\n\t\tconsole.log('email: ', email);\n\t\tconsole.log('password: ', password);\n\n\t\t// Post login data\n\t\tconst news_url = 'http://' + window.location.hostname + '/auth/login';\n\t\tconst request = new Request(news_url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: email,\n\t\t\t\tpassword: password\n\t\t\t})\n\t\t});\n\n\t\tfetch(request)\n\t\t\t.then(response => {\n\t\t\t\tif (response.status === 200) {\n\t\t\t\t\tthis.setState({ error: '' });\n\t\t\t\t\tresponse.json()\n\t\t\t\t\t\t.then(parsed => {\n\t\t\t\t\t\t\tAuth.authenticateUser(parsed.token, email);\n\t\t\t\t\t\t\twindow.location.replace('/');\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log('login failed!.');\n\t\t\t\t\tresponse.json().then(parsed => {\n\t\t\t\t\t\tconst error = parsed.error ? parsed.error : '';\n\t\t\t\t\t\tthis.setState({ error });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tchangeUser(event) {\n\t\tevent.preventDefault();\n\n\t\tconst field = event.target.name;\n\t\tconst user = this.state.user;\n\t\tuser[field] = event.target.value;\n\n\t\tthis.setState({ user });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<LoginForm\n\t\t\t\tonSubmit={(e) => this.processForm(e)}\n\t\t\t\tonChange={(e) => this.changeUser(e)}\n\t\t\t\terror={this.state.error}\n\t\t\t/>);\n\t}\n}\n\nexport default LoginPage;\n","import './SignUpForm.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst SignUpForm = ({\n\tonSubmit,\n\tonChange,\n\terror,\n}) => (\n\t<div className=\"signup-panel\">\n\t\t <Paper className=\"paper\">\n\t\t\t <Typography component=\"h1\" variant=\"h4\">\n\t\t\t\t Sign up\n\t\t\t </Typography>\n\t\t\t <form onSubmit={onSubmit}>\n\t\t\t   {error && <p className=\"error-message\">{error}</p>}\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n\t\t\t\t\t <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"password\">Password</InputLabel>\n\t\t\t\t\t <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"password\">Confirm Password</InputLabel>\n\t\t\t\t\t <Input name=\"confirm_password\" type=\"password\" id=\"confirm_password\" autoComplete=\"current-password\" onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <br/>\n\t\t\t\t <br/>\n\t\t\t\t <Button\n\t\t\t\t\t type=\"submit\"\n\t\t\t\t\t fullWidth\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"primary\">\n\t\t\t\t\t Sign in\n\t\t\t\t </Button>\n\t\t\t </form>\n\t\t </Paper>\n\t </div>\n);\n\nSignUpForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terror: PropTypes.func.isRequired\n}\n\nexport default SignUpForm;\n","import Auth from '../Auth/Auth';\nimport SignUpForm from './SignUpForm';\nimport React from 'react';\n\nclass SignUpPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\terror: '',\n\t\t\tuser: {\n\t\t\t\temail: '',\n\t\t\t\tpassword: '',\n\t\t\t\tconfirm_password: '',\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessForm(event) {\n\t\tevent.preventDefault();\n\n\t\tconst email = this.state.user.email;\n\t\tconst password = this.state.user.password;\n\t\tconst confirm_password = this.state.user.confirm_password;\n\n\t\tconsole.log('email: ', email);\n\t\tconsole.log('password: ', password);\n\t\tconsole.log('confirm_password: ', confirm_password);\n\n\t\t// Post signup data\n\t\tconst news_url = 'http://' + window.location.hostname + '/auth/signup';\n\t\tconst request = new Request(news_url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: email,\n\t\t\t\tpassword: password\n\t\t\t})\n\t\t});\n\n\t\tfetch(request)\n\t\t\t.then(response => {\n\t\t\t\tif (response.status === 200) {\n\t\t\t\t\tthis.setState({ error: '' });\n\n\t\t\t\t\t// Change the current url to /\n\t\t\t\t\twindow.location.replace('/');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log('singup failed!.');\n\t\t\t\t\tresponse.json().then(parsed => {\n\t\t\t\t\t\tconst error = parsed.error ? parsed.error : '';\n\t\t\t\t\t\tthis.setState({ error });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tchangeUser(event) {\n\t\tevent.preventDefault();\n\n\t\tconst field = event.target.name;\n\t\tconst user = this.state.user;\n\t\tuser[field] = event.target.value;\n\n\t\tthis.setState({ user });\n\n\t\tlet error = this.state.error;\n\t\tconsole.log(this.state.user);\n\t\tif (this.state.user.password !== this.state.user.confirm_password) {\n\t\t\terror = \"Password and confirm password don't match\";\n\t\t}\n\t\telse {\n\t\t\terror = \"\";\n\t\t}\n\t\tthis.setState({ error });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<SignUpForm\n\t\t\t\tonSubmit={(e) => this.processForm(e)}\n\t\t\t\tonChange={(e) => this.changeUser(e)}\n\t\t\t\terror={this.state.error}\n\t\t\t/>);\n\t}\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport App from '../App/App';\nimport LoginPage from '../LoginPage/LoginPage';\nimport SignUpPage from '../SignUp/SignUpPage';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Auth from '../Auth/Auth';\n\nimport { Route, Link, withRouter } from 'react-router-dom';\n\nimport './Base.css';\n\nconst logout = (history) => {\n\thistory.push('/login');\n};\n\nconst Base = withRouter(({ history }) => (\n\t<div className=\"root\">\n\t  <AppBar position=\"static\" className=\"appBar\">\n\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t<IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/></svg>\n\t\t\t\t</IconButton>\n\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n\t\t\t\t\tTrendy\n\t\t\t\t</Typography>\n\t\t\t\t\t{Auth.isUserAuthenticated() ?\n\t\t\t\t\t\t(<div>\n\t\t\t\t\t\t\t{Auth.getEmail()}\n\t\t\t\t\t\t\t<Button color=\"inherit\" href=\"/logout\" onClick={e => logout(e, history)}>Log out</Button>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t\t:\n\t\t\t\t\t\t(<div>\n\t\t\t\t            <Button color=\"inherit\" component={ Link } to=\"/login\">Log in</Button>\n\t\t\t\t            <Button color=\"inherit\" component={ Link } to=\"/signup\">Sign up</Button>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n    <br/>\n    <Route exact path=\"/\" render={() => (Auth.isUserAuthenticated() ?\n  \t\t<App /> : <LoginPage />)} />\n  \t<Route exact path=\"/login\" component={LoginPage} />\n  \t<Route exact path=\"/signup\" component={SignUpPage} />\n\t</div>\n));\n\nexport default Base;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Base from './Base/Base';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><Base /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}