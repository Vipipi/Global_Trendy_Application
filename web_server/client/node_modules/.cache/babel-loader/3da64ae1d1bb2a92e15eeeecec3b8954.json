{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/Attempt/web_server/client/src/Graph/Graph.js\";\nimport React from 'react';\nimport { ForceGraph3D } from 'react-force-graph';\nimport * as THREE from 'three';\n\nclass Graph extends React.Component {\n  onClick(node) {\n    this.props.handleNodeClick(node); // Aim at node from outside it.\n\n    const distance = 60;\n    const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\n    this.fg.cameraPosition({\n      x: node.x * distRatio,\n      y: node.y * distRatio,\n      z: node.z * distRatio\n    }, node, // look at {x, y, z})\n    3000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(ForceGraph3D, {\n      ref: el => {\n        this.fg = el;\n      },\n      width: window.innerWidth * 0.65,\n      backgroundColor: \"white\",\n      linkColor: link => '#0a6aee',\n      graphData: this.props.graphData,\n      linkWidth: link => 0.5,\n      onNodeClick: node => this.onClick(node),\n      nodeThreeObject: ({\n        news\n      }) => {\n        const imgTexture = new THREE.TextureLoader().load(news.urlToImage);\n        const material = new THREE.SpriteMaterial({\n          map: imgTexture\n        });\n        const sprite = new THREE.Sprite(material);\n        sprite.scale.set(21, 14, 1);\n        return sprite;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/ec2-user/environment/Attempt/web_server/client/src/Graph/Graph.js"],"names":["React","ForceGraph3D","THREE","Graph","Component","onClick","node","props","handleNodeClick","distance","distRatio","Math","hypot","x","y","z","fg","cameraPosition","render","el","window","innerWidth","link","graphData","news","imgTexture","TextureLoader","load","urlToImage","material","SpriteMaterial","map","sprite","Sprite","scale","set"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAEnCC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACb,SAAKC,KAAL,CAAWC,eAAX,CAA2BF,IAA3B,EADa,CAGb;;AACA,UAAMG,QAAQ,GAAG,EAAjB;AACA,UAAMC,SAAS,GAAG,IAAID,QAAQ,GAAGE,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACO,CAAhB,EAAmBP,IAAI,CAACQ,CAAxB,EAA2BR,IAAI,CAACS,CAAhC,CAAjC;AACA,SAAKC,EAAL,CAAQC,cAAR,CAAuB;AAAEJ,MAAAA,CAAC,EAAEP,IAAI,CAACO,CAAL,GAASH,SAAd;AAAyBI,MAAAA,CAAC,EAAER,IAAI,CAACQ,CAAL,GAASJ,SAArC;AAAgDK,MAAAA,CAAC,EAAET,IAAI,CAACS,CAAL,GAASL;AAA5D,KAAvB,EACCJ,IADD,EACO;AACN,QAFD;AAGA;;AAEDY,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,oBAAC,YAAD;AACI,MAAA,GAAG,EAAKC,EAAE,IAAI;AAAE,aAAKH,EAAL,GAAUG,EAAV;AAAe,OADnC;AAEI,MAAA,KAAK,EAAGC,MAAM,CAACC,UAAP,GAAoB,IAFhC;AAGI,MAAA,eAAe,EAAC,OAHpB;AAII,MAAA,SAAS,EAAGC,IAAI,IAAI,SAJxB;AAKI,MAAA,SAAS,EAAG,KAAKf,KAAL,CAAWgB,SAL3B;AAMI,MAAA,SAAS,EAAGD,IAAI,IAAI,GANxB;AAOI,MAAA,WAAW,EAAEhB,IAAI,IAAI,KAAKD,OAAL,CAAaC,IAAb,CAPzB;AAQI,MAAA,eAAe,EAAE,CAAC;AAAEkB,QAAAA;AAAF,OAAD,KAAc;AAC/B,cAAMC,UAAU,GAAG,IAAIvB,KAAK,CAACwB,aAAV,GAA0BC,IAA1B,CAA+BH,IAAI,CAACI,UAApC,CAAnB;AACA,cAAMC,QAAQ,GAAG,IAAI3B,KAAK,CAAC4B,cAAV,CAAyB;AAAEC,UAAAA,GAAG,EAAEN;AAAP,SAAzB,CAAjB;AACA,cAAMO,MAAM,GAAG,IAAI9B,KAAK,CAAC+B,MAAV,CAAiBJ,QAAjB,CAAf;AACAG,QAAAA,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAiB,EAAjB,EAAqB,EAArB,EAAyB,CAAzB;AACA,eAAOH,MAAP;AACL,OAdC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,CADD;AAoBA;;AAlCkC;;AAqCpC,eAAe7B,KAAf","sourcesContent":["import React from 'react';\nimport { ForceGraph3D } from 'react-force-graph';\nimport * as THREE from 'three';\n\nclass Graph extends React.Component {\n\n\tonClick(node) {\n\t\tthis.props.handleNodeClick(node);\n\n\t\t// Aim at node from outside it.\n\t\tconst distance = 60;\n\t\tconst distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\n\t\tthis.fg.cameraPosition({ x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio },\n\t\t\tnode, // look at {x, y, z})\n\t\t\t3000);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n            <ForceGraph3D\n                ref = { el => { this.fg = el; } }\n                width={ window.innerWidth * 0.65 }\n                backgroundColor='white'\n                linkColor={ link => '#0a6aee' }\n                graphData={ this.props.graphData }\n                linkWidth={ link => 0.5 }\n                onNodeClick={node => this.onClick(node)}\n                nodeThreeObject={({ news }) => {\n                const imgTexture = new THREE.TextureLoader().load(news.urlToImage);\n                const material = new THREE.SpriteMaterial({ map: imgTexture });\n                const sprite = new THREE.Sprite(material);\n                sprite.scale.set(21, 14, 1);\n                return sprite;\n          }}\n        />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}