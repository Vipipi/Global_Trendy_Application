{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/Attempt/web_server/client/src/App/App.js\";\nimport React from 'react';\nimport TestData from './test_data.json';\nimport './App.css';\nimport NewsCard from '../NewsCard/NewsCard';\nimport Graph from '../Graph/Graph';\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {},\n      focused_news: {},\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadNews();\n  }\n\n  loadNews() {\n    const news_url = 'http://' + window.location.hostname + '/news';\n    const request = new Request(news_url, {\n      method: 'GET'\n    });\n    fetch(request).then(res => res.json()).then(parsed => {\n      this.setState({\n        data: parsed,\n        focused_news: parsed.focused_news,\n        loaded: true\n      });\n    });\n  }\n\n  generateGraphData(graphData) {\n    const nodes = graphData.news.map(news => ({\n      id: news.digest,\n      news: news\n    }));\n    console.log(\"nodes:\" + nodes);\n    console.log(\"Links:\" + graphData.graph.links);\n    const gData = {\n      nodes: nodes,\n      links: graphData.graph.links.map(link => ({\n        source: link.from,\n        target: link.to\n      }))\n    };\n    return gData;\n  }\n\n  handleNodeClick(node) {\n    this.setState({\n      focused_news: node.news\n    });\n  }\n\n  render() {\n    if (this.state.loaded === false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const graphData = this.generateGraphData(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Graph, {\n      graphData: graphData,\n      handleNodeClick: node => this.handleNodeClick(node),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(NewsCard, {\n      news: this.state.focused_news,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ec2-user/environment/Attempt/web_server/client/src/App/App.js"],"names":["React","TestData","NewsCard","Graph","Grid","App","Component","constructor","state","data","focused_news","loaded","componentDidMount","loadNews","news_url","window","location","hostname","request","Request","method","fetch","then","res","json","parsed","setState","generateGraphData","graphData","nodes","news","map","id","digest","console","log","graph","links","gData","link","source","from","target","to","handleNodeClick","node","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,EADI;AAETC,MAAAA,YAAY,EAAC,EAFJ;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL;AACH;;AACDA,EAAAA,QAAQ,GAAE;AACN,UAAMC,QAAQ,GAAG,YAAWC,MAAM,CAACC,QAAP,CAAgBC,QAA3B,GAAsC,OAAvD;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAYL,QAAZ,EAAqB;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAArB,CAAhB;AAEAC,IAAAA,KAAK,CAACH,OAAD,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZ,WAAKC,QAAL,CAAc;AACVjB,QAAAA,IAAI,EAACgB,MADK;AAEVf,QAAAA,YAAY,EAAEe,MAAM,CAACf,YAFX;AAGVC,QAAAA,MAAM,EAAE;AAHE,OAAd;AAKH,KARL;AASH;;AAEDgB,EAAAA,iBAAiB,CAACC,SAAD,EAAW;AACxB,UAAMC,KAAK,GAAGD,SAAS,CAACE,IAAV,CAAeC,GAAf,CAAmBD,IAAI,KAAK;AAACE,MAAAA,EAAE,EAAEF,IAAI,CAACG,MAAV;AAAkBH,MAAAA,IAAI,EAAEA;AAAxB,KAAL,CAAvB,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWN,KAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,SAAS,CAACQ,KAAV,CAAgBC,KAAvC;AACA,UAAMC,KAAK,GAAG;AACVT,MAAAA,KAAK,EAAEA,KADG;AAEVQ,MAAAA,KAAK,EAAET,SAAS,CAACQ,KAAV,CAAgBC,KAAhB,CAAsBN,GAAtB,CAA0BQ,IAAI,KAAK;AACtCC,QAAAA,MAAM,EAACD,IAAI,CAACE,IAD0B;AAEtCC,QAAAA,MAAM,EAACH,IAAI,CAACI;AAF0B,OAAL,CAA9B;AAFG,KAAd;AAOA,WAAOL,KAAP;AACH;;AAGDM,EAAAA,eAAe,CAACC,IAAD,EAAM;AACjB,SAAKnB,QAAL,CAAc;AACVhB,MAAAA,YAAY,EAAEmC,IAAI,CAACf;AADT,KAAd;AAIH;;AACDgB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKtC,KAAL,CAAWG,MAAX,KAAsB,KAA1B,EAAgC;AAC5B,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AACH;;AAED,UAAMiB,SAAS,GAAG,KAAKD,iBAAL,CAAuB,KAAKnB,KAAL,CAAWC,IAAlC,CAAlB;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAImB,SAApB;AAA+B,MAAA,eAAe,EAAKiB,IAAD,IAAU,KAAKD,eAAL,CAAqBC,IAArB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADH,EAIG,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKrC,KAAL,CAAWE,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJH,CADF,CAAP;AAUH;;AAlE4B;;AAoEjC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport TestData from './test_data.json';\nimport './App.css';\n\nimport NewsCard from '../NewsCard/NewsCard';\nimport Graph from '../Graph/Graph';\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            data:{}, \n            focused_news:{},\n            loaded: false\n        }\n    }\n    \n    componentDidMount(){\n        this.loadNews();\n    }\n    loadNews(){\n        const news_url = 'http://'+ window.location.hostname + '/news';\n        const request = new Request(news_url,{ method: 'GET' });\n        \n        fetch(request)\n            .then(res => res.json())\n            .then(parsed => {\n                this.setState({\n                    data:parsed,\n                    focused_news: parsed.focused_news,\n                    loaded: true\n                });\n            });\n    }\n    \n    generateGraphData(graphData){\n        const nodes = graphData.news.map(news => ({id: news.digest, news: news}));\n        console.log(\"nodes:\" + nodes);\n        console.log(\"Links:\" + graphData.graph.links);\n        const gData = {\n            nodes: nodes,\n            links: graphData.graph.links.map(link => ({\n                source:link.from,\n                target:link.to\n            }))\n        };\n        return gData;\n    }\n    \n\n    handleNodeClick(node){\n        this.setState({\n            focused_news: node.news\n        })\n        \n    }\n    render() {\n        if (this.state.loaded === false){\n            return (<div>Loading...</div>)\n        }\n        \n        const graphData = this.generateGraphData(this.state.data);\n        \n        return(<div>\n                 <Grid container>\n                    <Grid item md={8}>\n                      <Graph graphData = {graphData} handleNodeClick = {(node) => this.handleNodeClick(node)} />\n                    </Grid>\n                    <Grid item md={4}>\n                      <NewsCard news={this.state.focused_news} />\n                    </Grid>\n                 </Grid>\n               </div>);\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}